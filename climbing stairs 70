/* hint -> count all possible ways -> think of dp always
dp[i] = no of ways to reach from 0 to nth index
*/
/* tc and sc
same as fibonacci sequence
*/

class Solution {
public:
    
    int memo(int n , vector<int> &dp){
        if(n==0 or n==1) return 1;
        if(dp[n]!=-1) return dp[n];
        // count all ways
        return dp[n] =  memo(n-1,dp) + memo(n-2,dp);
    }
    
    int climbStairs(int n) {
        vector<int> dp(n+1,-1);
        //return memo(n,dp);
        dp[0] = 1;
        dp[1] = 1;
        if(n==0 or n==1) return n;
        for(int i = 2 ; i <= n ; i++) dp[i] = dp[i-1] + dp[i-2];
        return dp[n];
        // space o -> same as fibonacci
    }
};
